{
	"JSON.parse: JSONArray":
	{
	    "init": 
		"let x = JSON.parse(\"[1,2,3]\")",
	    "tests": 
	    [
		["x.length", 3],
		["x[0]+x[1]+x[2]", 6]
	    ]
	},
	
	"JSON.parse: JSONObject":
	{
	    "init": 
		"let x = JSON.parse(\"{}\")",
	    "tests": 
	    [
		["Object.getPrototypeOf(x) === Object.prototype", true ]
	    ]
	},
	"JSON.stringify of an array":
	{
	    "init":
		"let x = JSON.stringify([1,2,null,\"a\",\"b\"])",
	    "tests":
	    [
	    
		["x[0]", "["],
		["x[x.length-1]", "]"]
	    ]	
	},
	"JSON.parse: JSONObject with props":
	{
	    "init":
		"let x = JSON.parse('{\"a\":1}')",
	    "tests":
	    [
	    
		["typeof x", "object"],
		["x['a']", 1]
	    ]	
	},
	
	"JSON.stringify of an object":
	{
	    "init":
		"let x = JSON.stringify({a:1,b:2})",
	    "tests":
	    [
		["x[0]", "{"],
		["x[x.length-1]", "}"],
		["x.indexOf('a') > -1", true],
		["x.indexOf('b') > -1", true]
	    ]	
	},
	"JSON.stringify of an empty object":
	{
	    "init":
		"let x = JSON.stringify({})",
	    "tests":
	    [
		["x[0]", "{"],
		["x[x.length-1]", "}"]
	    ]	
	},
	"JSON.stringify of an empty array":
	{
	    "init":
		"let x = JSON.stringify([])",
	    "tests":
	    [
		["x[0]", "["],
		["x[x.length-1]", "]"]
	    ]	
	}
}
