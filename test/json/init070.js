const object = new Object();
const object2 = Object();
const array = new Array(5);
const array2 = Array();
const proxy = new Proxy({},{});
const set = new Set();
const map = new Map();
const arraybuffer = new ArrayBuffer(24);
const dataview = new DataView(arraybuffer);
const regexp = new RegExp("abc");
const i8 = new Int8Array(arraybuffer);
const ui8 = new Uint8Array(arraybuffer);
const ui8c = new Uint8ClampedArray(arraybuffer);
const i16 = new Int16Array(arraybuffer);
const ui16 = new Uint16Array(arraybuffer);
const i32 = new Int32Array(arraybuffer);
const ui32 = new Uint32Array(arraybuffer);
const f32 = new Float32Array(arraybuffer);
const f64 = new Float64Array(arraybuffer);
const number = new Number(1);
const boolean = new Boolean(true);
const string = new String("abc");
const symbol = Symbol();
const func = new Function("a", "return a");
//const generator = new GeneratorFunction("a", "yield a;");
const date = new Date();
const loader = new (Reflect.Loader);
const realm = new (Reflect.Realm);
const promise = new Promise((r,rej) => r('accepted'));
const error = new Error("e");
const typeerror = new TypeError("e");
const referror = new ReferenceError("e");
const evalerror = new EvalError("e");
const syntaxerror = new SyntaxError("e");
const urierror = new URIError("e");
