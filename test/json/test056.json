{
	"my lookahead { restriction made it impossible to return object literals from functions (dunno which bugs may follow)":
	{
	    "init": 		
		"function f() { return { a:1, b: 2 } }",
	    "tests": 
	    [
		["typeof f()", "object"],
		["f().a", 1],
		["f().b", 2],
		["f() === f()", false],
		["f().a === f().a", true]
	    ]
	},
	
	"return with line terminator ahead":
	{
	    "init": 		
		"function f() { return\n\n[1,2,3,4] }",
	    "tests": 
	    [
		["typeof f()", "undefined"],
		["f()"]
	    ]
	}

}